name: Docker Build and Push

# Esse workflow será executado quando houver um push na branch main
on:
  push:
    branches:
      - main

jobs:
  build:
    # O ambiente onde o job será executado (Ubuntu)
    runs-on: ubuntu-latest

    steps:
      # Checkout do repositório, necessário para o GitHub Actions acessar o código-fonte
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configura o Docker Buildx, uma ferramenta necessária para a criação de imagens Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Logar no GitHub Container Registry (ghcr.io), utilizando o GITHUB_TOKEN gerado automaticamente
      - name: Log in to the GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Fazer build da imagem Docker usando o Dockerfile no repositório
      - name: Build the Docker image
        run: docker build -t ghcr.io/${{ github.repository }}/app:latest .

      # Enviar (push) a imagem Docker para o GitHub Container Registry
      - name: Push the Docker image to GitHub Packages
        run: docker push ghcr.io/${{ github.repository }}/app:latest

  # (Opcional) Teste de unidade, caso você tenha um sistema de testes implementado
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Executar os testes unitários dentro do container
      - name: Run tests on Docker image
        run: docker run ghcr.io/${{ github.repository }}/app:latest pytest
