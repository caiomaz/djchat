services:
  web:
    image: ghcr.io/caiomaz/djchat/app:dev
    container_name: app
    ports:
      - "8000:8000"
    env_file:
      - .env
    restart: always
    depends_on:
      db:
        condition: service_healthy
    networks:
      - dev

  db:
    image: postgres
    container_name: database
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dev

  backup:
    image: postgres
    container_name: db_backup
    restart: "no"
    depends_on:
      - db
    volumes:
      - backup:/backup
    env_file:
      - .env
    entrypoint: [ "sh", "-c", "pg_dump -h db -U ${DATABASE_USER} -d ${DATABASE_NAME} > /backup/db_dump.sql && rclone copy /backup/db_dump.sql gdrive:/DB-BACKUP-TESTE" ]
    networks:
      - dev

volumes:
  data:
  backup:

networks:
  dev: